// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppToModifyRecordsInDB.Data;

#nullable disable

namespace WebAppToModifyRecordsInDB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220918195927_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Accreditation", b =>
                {
                    b.Property<int>("AccreditationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Expires")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccreditationId");

                    b.HasIndex("StatusId");

                    b.ToTable("Accreditations");
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipPostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccreditationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TrackTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccreditationId");

                    b.HasIndex("AddressId");

                    b.HasIndex("TrackTypeId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Full"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Suspended"
                        });
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.TrackType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TrackTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Racetrack"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trainingtrack"
                        });
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Accreditation", b =>
                {
                    b.HasOne("WebAppToModifyRecordsInDB.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WebAppToModifyRecordsInDB.Models.Location", b =>
                {
                    b.HasOne("WebAppToModifyRecordsInDB.Models.Accreditation", "Accreditation")
                        .WithMany()
                        .HasForeignKey("AccreditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppToModifyRecordsInDB.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppToModifyRecordsInDB.Models.TrackType", "TrackType")
                        .WithMany()
                        .HasForeignKey("TrackTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accreditation");

                    b.Navigation("Address");

                    b.Navigation("TrackType");
                });
#pragma warning restore 612, 618
        }
    }
}
